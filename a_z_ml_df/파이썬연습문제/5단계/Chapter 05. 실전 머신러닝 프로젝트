{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Chapter 05. 실전 머신러닝 프로젝트","private_outputs":true,"provenance":[{"file_id":"1TRBqy_J51KxHfJIEOAtoR4POJjAKuyA6","timestamp":1639475577550}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 이번 머신러닝 프로젝트 문제에는 모범 답안이 제공되지 않습니다.\n","\n","#### 주어진 문제를 통해 데이터를 분석하고, 직접 해결해보는 가이드라인이 제공됩니다.\n","\n","#### 해당 문제들을 잘 살펴보고, 어떻게 분석할 수 있을지 고민해보세요.\n","\n","출제자: 김용담 강사"],"metadata":{"id":"OYmJtStelv8C"}},{"cell_type":"markdown","source":["### 문제 01 ~ 10. Prudential Life Insurance Assessment\n","\n","- 해당 대회에서는 Kaggle에서 열렸던 보험 데이터를 통한 고객의 risk-level 예측 문제를 풀어봅니다.\n","\n","- 데이터를 이해하고, 전처리를 통해 결측치 처리를 해야합니다.\n","\n","- feature engineering도 중요합니다.\n","\n","- 만들어진 Feature vector를 머신러닝 모델을 이용하여, 학습을 해보고 평가해봅니다.\n","\n","\n","Source : https://www.kaggle.com/c/prudential-life-insurance-assessment"],"metadata":{"id":"BddnMRTNmAcA"}},{"cell_type":"markdown","source":["### 문제 01. 데이터 및 라이브러리 불러오기"],"metadata":{"id":"wAeOBPm0pKIo"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"v_ytQOwKLva0"},"outputs":[],"source":[""]},{"cell_type":"markdown","source":["### 문제 02. 기본적인 데이터 정보 파악하기\n","\n","- row, column 개수\n","\n","- 결측치 여부\n","\n","- data type\n","\n","- memory 요구량\n","\n","- 기초 통계량"],"metadata":{"id":"n2ovpQlVpVoR"}},{"cell_type":"code","source":[""],"metadata":{"id":"nZDbdfynNnQE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 03. 데이터 결측치 파악하기\n","\n","- 결측치가 어떤 column에 얼마나 있는지 파악합니다."],"metadata":{"id":"hZcmacnqplSI"}},{"cell_type":"code","source":[""],"metadata":{"id":"tLyEDpispxjN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 04. 데이터 결측치 처리하기\n","\n","- 결측치가 유독 많은 Column들이 많습니다. 해당 column들을 drop할지, 결측치를 채울지 선택합니다."],"metadata":{"id":"FGEE73AepyVw"}},{"cell_type":"code","source":[""],"metadata":{"id":"z8CNG4Vzp5tO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 05. Categorical Feature Encoding\n","\n","- object 타입인 Product_Info_2 column을 처리합니다.\n","\n","- One-hot encoding을 사용할지, Ordinal encoding을 사용할지 고민합니다."],"metadata":{"id":"aWexkyLHp6Kw"}},{"cell_type":"code","source":[""],"metadata":{"id":"1X1e0eh_q6dn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 06. Feature Engineering\n","\n","- 해당 데이터에서 추가로 생성할 만한 feature가 없는지 고민해봅니다.\n","\n","- 데이터를 더 잘 나타낼 feature가 있을까요?"],"metadata":{"id":"NgdL8Q86q6-9"}},{"cell_type":"code","source":[""],"metadata":{"id":"107_vAF5rDhH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 07. Quadratic Weighted Kappa score (Evaluation Metric)\n","\n","- 이번 대회의 평가 지표입니다.\n","\n","- 이 지표는 분류 모델을 위한 지표일까요, 회귀 모델을 위한 지표일까요?\n","\n","- 해당 Metric을 직접 구현해보세요.\n","\n","- 어떤 포인트를 중점으로 예측 모델을 개발해야 할까요?"],"metadata":{"id":"slwoRZPirEEo"}},{"cell_type":"code","source":[""],"metadata":{"id":"t_wPRILKrUcD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 08. 학습 데이터 준비\n","\n","- train-test split이나 KFold를 통해 학습 데이터를 구성해보세요.\n","\n","- 필요하다면 학습 파이프라인을 만들어보는 것도 좋습니다."],"metadata":{"id":"St5CRlf-rffj"}},{"cell_type":"code","source":[""],"metadata":{"id":"AUmjPYvErmX8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 09. Random Forest model 학습\n","\n","- RandomForestRegressor를 사용하여 학습하고, 평가해보세요."],"metadata":{"id":"MSH_Mud2rVbz"}},{"cell_type":"code","source":["|"],"metadata":{"id":"0I_WJQf-rdWH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 10. XGBoost model 학습\n","\n","- 당시 대회에서 가장 많이 사용되었던 XGBoost로 학습하고, 평가해보세요.\n","\n","- RandomForest보다 성능이 잘 나오나요?\n","\n","- Hyper-parameter tuning은 어떻게 할까요?"],"metadata":{"id":"WjEey3t7rm7f"}},{"cell_type":"code","source":[""],"metadata":{"id":"S2Kfp9wUrxmO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 11 ~ 20. Bosch Production Line Performance\n","\n","- 해당 대회에서는 Kaggle에서 열렸던 생산 공장 데이터를 통해서 제품 내부 불량 여부를 예측하는 문제를 해결합니다.\n","\n","- 데이터를 이해하고, 전처리를 통해 결측치 처리를 해야합니다.\n","\n","- feature engineering도 중요합니다.\n","\n","- 만들어진 Feature vector를 머신러닝 모델을 이용하여, 학습을 해보고 평가해봅니다.\n","\n","\n","Source : https://www.kaggle.com/c/bosch-production-line-performance/overview"],"metadata":{"id":"ydNBI3Rcryjs"}},{"cell_type":"markdown","source":["### 문제 11. 데이터 및 라이브러리 불러오기\n","\n","- 이 대회의 데이터셋은 매우 큽니다.\n","\n","\n","- 이렇게 큰 사이즈의 데이터셋을 불러오기 위해서는 많은 메모리가 필요합니다.\n","\n","- 메모리가 충분하지 않은 상황에서 어떻게하면 데이터를 불러올 수 있을까요?\n","\n","Hint : I/O를 활용하세요!"],"metadata":{"id":"5Fc26Hxgs5or"}},{"cell_type":"code","source":[""],"metadata":{"id":"cB738N1is4_O"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 12. 기본적인 데이터 정보 파악하기\n","\n","- row, column 개수\n","\n","- 결측치 여부\n","\n","- data type\n","\n","- memory 요구량\n","\n","- 기초 통계량"],"metadata":{"id":"2i68WXqTs-NX"}},{"cell_type":"code","source":[""],"metadata":{"id":"ggNdRoris9CH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 13. 데이터 결측치 확인하기"],"metadata":{"id":"JjvlkXxUtDwn"}},{"cell_type":"code","source":[""],"metadata":{"id":"1JntaOOTt9Za"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 14. feature engineering\n","\n","- 해당 데이터 역시 column이 masking 되어 있습니다.\n","\n","- L, S, F로 시작하는 \bcolumn들의 패턴을 파악하여 필요한 정보를 추출합니다.\n","\n","- 추출한 정보를 기반으로 새로운 feature들을 생성해보세요."],"metadata":{"id":"zTXDnSvIt96p"}},{"cell_type":"code","source":[""],"metadata":{"id":"JJhPmIFjuG-K"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 15. Matthew Correlation Coefficient 이해하기\n","\n","- MCC는 TP, FP, FN, TN을 모두 신경써야 하는 굉장히 까다로운 이진 분류 지표입니다.\n","\n","- 해당 지표를 직접 구현해보고 적용해보세요."],"metadata":{"id":"z5NQ5KfhuXjM"}},{"cell_type":"code","source":[""],"metadata":{"id":"-3-2CPKiuxg-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 16. 학습 데이터 만들기\n","\n","- train-test split이나 KFold를 통해서 학습 데이터를 생성해보세요.\n","\n","- Stratified KFold나 Group KFold를 사용하는건 어떨까요?"],"metadata":{"id":"5FQznSagux_-"}},{"cell_type":"code","source":[""],"metadata":{"id":"EN6u7GlHvETo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 17. Logistic Regression 모델로 학습하기\n","\n","- 대표적인 이진 분류 모델로 불량 검출 모델을 수행합니다."],"metadata":{"id":"98b0s5KCvLjv"}},{"cell_type":"markdown","source":["### 문제 18. Random Forest 모델로 학습하기\n","\n","- RandomForestClassifier로 불량 검출을 수행합니다.\n","\n","- LogisticRegression 모델과 비교했을 때, 장단점이 어떤게 있나요?"],"metadata":{"id":"bqJivnjwvEug"}},{"cell_type":"code","source":[""],"metadata":{"id":"1Hgh5GilvLHv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 19. XGBoost 모델로 학습하기\n","\n","- XGBClassifier로 불량 검출을 수행합니다.\n","\n","- XGBClassifier의 다양한 hyper-parameter를 GridSearchCV 함수를 통해서 골라보세요."],"metadata":{"id":"YqsvnKpuva1r"}},{"cell_type":"code","source":[""],"metadata":{"id":"nUHBlkQHvui0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제 20. optuna 사용해보기\n","\n","- optuna라는 AutoML framework를 이용하여 최적의 Hyper-parameter를 찾아봅니다.\n","\n","\n","- optuna는 학습에 맞는 목적 함수를 제공하면 최적의 파라미터 조합을 찾아줍니다. 대신에 많은 computational cost를 필요로 합니다.\n","\n","- 학습을 돌려놓고, 최적의 성능을 내는 xgboost 모델을 찾아보세요."],"metadata":{"id":"NqUVuy17vvYY"}},{"cell_type":"code","source":["!pip install optuna"],"metadata":{"id":"W6MGWc72wLGi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"fUjTR_zTwNcK"},"execution_count":null,"outputs":[]}]}